[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\BERBitStringParser.java:13:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic class BERBitStringParser[0m
[0m[[0m[33mwarn[0m] [0m[0m    implements ASN1BitStringParser[0m
[0m[[0m[33mwarn[0m] [0m[0m{[0m
[0m[[0m[33mwarn[0m] [0m[0m    private ASN1StreamParser _parser;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private ConstructedBitStream _bitStream;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    BERBitStringParser([0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1StreamParser parser)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        _parser = parser;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public InputStream getOctetStream() throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return _bitStream = new ConstructedBitStream(_parser, true);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public InputStream getBitStream() throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return _bitStream = new ConstructedBitStream(_parser, false);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public int getPadBits()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return _bitStream.getPadBits();[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive getLoadedObject()[0m
[0m[[0m[33mwarn[0m] [0m[0m        throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return parse(_parser);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive toASN1Primitive()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        try[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return getLoadedObject();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        catch (IOException e)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new ASN1ParsingException("IOException converting stream to byte array: " + e.getMessage(), e);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    static BERBitString parse(ASN1StreamParser sp) throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        ConstructedBitStream bitStream = new ConstructedBitStream(sp, false);[0m
[0m[[0m[33mwarn[0m] [0m[0m        byte[] data = Streams.readAll(bitStream);[0m
[0m[[0m[33mwarn[0m] [0m[0m        int padBits = bitStream.getPadBits();[0m
[0m[[0m[33mwarn[0m] [0m[0m        return new BERBitString(data, padBits);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m}[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\BEROctetStringParser.java:13:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic class BEROctetStringParser[0m
[0m[[0m[33mwarn[0m] [0m[0m    implements ASN1OctetStringParser[0m
[0m[[0m[33mwarn[0m] [0m[0m{[0m
[0m[[0m[33mwarn[0m] [0m[0m    private ASN1StreamParser _parser;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    BEROctetStringParser([0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1StreamParser parser)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        _parser = parser;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return an InputStream representing the contents of the OCTET STRING.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return an InputStream with its source as the OCTET STRING content.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public InputStream getOctetStream()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return new ConstructedOctetStream(_parser);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return an in-memory, encodable, representation of the OCTET STRING.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return a BEROctetString.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @throws IOException if there is an issue loading the data.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive getLoadedObject()[0m
[0m[[0m[33mwarn[0m] [0m[0m        throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return parse(_parser);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return an BEROctetString representing this parser and its contents.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return an BEROctetString[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive toASN1Primitive()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        try[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return getLoadedObject();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        catch (IOException e)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new ASN1ParsingException("IOException converting stream to byte array: " + e.getMessage(), e);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    static BEROctetString parse(ASN1StreamParser sp) throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return new BEROctetString(Streams.readAll(new ConstructedOctetStream(sp)));[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m}[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\BERSequenceParser.java:10:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic class BERSequenceParser[0m
[0m[[0m[33mwarn[0m] [0m[0m    implements ASN1SequenceParser[0m
[0m[[0m[33mwarn[0m] [0m[0m{[0m
[0m[[0m[33mwarn[0m] [0m[0m    private ASN1StreamParser _parser;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    BERSequenceParser(ASN1StreamParser parser)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this._parser = parser;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Read the next object in the SEQUENCE.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return the next object in the SEQUENCE, null if there are no more.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @throws IOException if there is an issue reading the underlying stream.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Encodable readObject()[0m
[0m[[0m[33mwarn[0m] [0m[0m        throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return _parser.readObject();[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return an in-memory, encodable, representation of the SEQUENCE.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return a BERSequence.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @throws IOException if there is an issue loading the data.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive getLoadedObject()[0m
[0m[[0m[33mwarn[0m] [0m[0m        throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return parse(_parser);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return an BERSequence representing this parser and its contents.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return an BERSequence[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive toASN1Primitive()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        try[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return getLoadedObject();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        catch (IOException e)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new IllegalStateException(e.getMessage());[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    static BERSequence parse(ASN1StreamParser sp) throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return new BERSequence(sp.readVector());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m}[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\BERSetParser.java:10:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic class BERSetParser[0m
[0m[[0m[33mwarn[0m] [0m[0m    implements ASN1SetParser[0m
[0m[[0m[33mwarn[0m] [0m[0m{[0m
[0m[[0m[33mwarn[0m] [0m[0m    private ASN1StreamParser _parser;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    BERSetParser(ASN1StreamParser parser)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this._parser = parser;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Read the next object in the SET.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return the next object in the SET, null if there are no more.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @throws IOException if there is an issue reading the underlying stream.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Encodable readObject()[0m
[0m[[0m[33mwarn[0m] [0m[0m        throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return _parser.readObject();[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return an in-memory, encodable, representation of the SET.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return a BERSet.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @throws IOException if there is an issue loading the data.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive getLoadedObject()[0m
[0m[[0m[33mwarn[0m] [0m[0m        throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return parse(_parser);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return an BERSet representing this parser and its contents.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return an BERSet[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive toASN1Primitive()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        try[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return getLoadedObject();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        catch (IOException e)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new ASN1ParsingException(e.getMessage(), e);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    static BERSet parse(ASN1StreamParser sp) throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return new BERSet(sp.readVector());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m}[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\DERExternal.java:23:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic DERExternal(ASN1EncodableVector vector)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(DERFactory.createSequence(vector));[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\DLExternal.java:23:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic DLExternal(ASN1EncodableVector vector)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(DLFactory.createSequence(vector));[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\DEROctetStringParser.java:11:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic class DEROctetStringParser[0m
[0m[[0m[33mwarn[0m] [0m[0m    implements ASN1OctetStringParser[0m
[0m[[0m[33mwarn[0m] [0m[0m{[0m
[0m[[0m[33mwarn[0m] [0m[0m    private DefiniteLengthInputStream stream;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    DEROctetStringParser([0m
[0m[[0m[33mwarn[0m] [0m[0m        DefiniteLengthInputStream stream)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.stream = stream;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return an InputStream representing the contents of the OCTET STRING.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return an InputStream with its source as the OCTET STRING content.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public InputStream getOctetStream()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return stream;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return an in-memory, encodable, representation of the OCTET STRING.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return a DEROctetString.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @throws IOException if there is an issue loading the data.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive getLoadedObject()[0m
[0m[[0m[33mwarn[0m] [0m[0m        throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return new DEROctetString(stream.toByteArray());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return an DEROctetString representing this parser and its contents.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return an DEROctetString[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive toASN1Primitive()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        try[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return getLoadedObject();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        catch (IOException e)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new ASN1ParsingException("IOException converting stream to byte array: " + e.getMessage(), e);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m}[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\DLBitStringParser.java:11:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic class DLBitStringParser[0m
[0m[[0m[33mwarn[0m] [0m[0m    implements ASN1BitStringParser[0m
[0m[[0m[33mwarn[0m] [0m[0m{[0m
[0m[[0m[33mwarn[0m] [0m[0m    private final DefiniteLengthInputStream stream;[0m
[0m[[0m[33mwarn[0m] [0m[0m    private int padBits = 0;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    DLBitStringParser([0m
[0m[[0m[33mwarn[0m] [0m[0m        DefiniteLengthInputStream stream)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.stream = stream;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public InputStream getBitStream() throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return getBitStream(false);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public InputStream getOctetStream() throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return getBitStream(true);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public int getPadBits()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return padBits;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive getLoadedObject()[0m
[0m[[0m[33mwarn[0m] [0m[0m        throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return ASN1BitString.createPrimitive(stream.toByteArray());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive toASN1Primitive()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        try[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return getLoadedObject();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        catch (IOException e)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new ASN1ParsingException("IOException converting stream to byte array: " + e.getMessage(), e);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private InputStream getBitStream(boolean octetAligned) throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        int length = stream.getRemaining();[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (length < 1)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new IllegalStateException("content octets cannot be empty");[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        padBits = stream.read();[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (padBits > 0)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (length < 2)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                throw new IllegalStateException("zero length data with non-zero pad bits");[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (padBits > 7)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                throw new IllegalStateException("pad bits cannot be greater than 7 or less than 0");[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (octetAligned)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                throw new IOException("expected octet-aligned bitstring, but found padBits: " + padBits);[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return stream;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m}[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\DLSequenceParser.java:10:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic class DLSequenceParser[0m
[0m[[0m[33mwarn[0m] [0m[0m    implements ASN1SequenceParser[0m
[0m[[0m[33mwarn[0m] [0m[0m{[0m
[0m[[0m[33mwarn[0m] [0m[0m    private ASN1StreamParser _parser;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    DLSequenceParser(ASN1StreamParser parser)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this._parser = parser;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return the next object in the SEQUENCE.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return next object in SEQUENCE.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @throws IOException if there is an issue loading the object.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Encodable readObject()[0m
[0m[[0m[33mwarn[0m] [0m[0m        throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return _parser.readObject();[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return an in memory, encodable, representation of the SEQUENCE.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return a DLSequence.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @throws IOException if there is an issue loading the data.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive getLoadedObject()[0m
[0m[[0m[33mwarn[0m] [0m[0m        throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m         return DLFactory.createSequence(_parser.readVector());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return a DLSequence representing this parser and its contents.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return a DLSequence.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive toASN1Primitive()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        try[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return getLoadedObject();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        catch (IOException e)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new IllegalStateException(e.getMessage());[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m}[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\DLSetParser.java:10:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic class DLSetParser[0m
[0m[[0m[33mwarn[0m] [0m[0m    implements ASN1SetParser[0m
[0m[[0m[33mwarn[0m] [0m[0m{[0m
[0m[[0m[33mwarn[0m] [0m[0m    private ASN1StreamParser _parser;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    DLSetParser(ASN1StreamParser parser)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this._parser = parser;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return the next object in the SET.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return next object in SET.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @throws IOException if there is an issue loading the object.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Encodable readObject()[0m
[0m[[0m[33mwarn[0m] [0m[0m        throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return _parser.readObject();[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return an in memory, encodable, representation of the SET.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return a DLSet.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @throws IOException if there is an issue loading the data.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive getLoadedObject()[0m
[0m[[0m[33mwarn[0m] [0m[0m        throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return DLFactory.createSet(_parser.readVector());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return a DLSet representing this parser and its contents.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return a DLSet[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive toASN1Primitive()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        try[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return getLoadedObject();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        catch (IOException e)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new ASN1ParsingException(e.getMessage(), e);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m}[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\math\ec\ECCurve.java:686:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic Fp(BigInteger q, BigInteger a, BigInteger b)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            this(q, a, b, null, null);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\math\ec\ECCurve.java:1136:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic F2m([0m
[0m[[0m[33mwarn[0m] [0m[0m            int m,[0m
[0m[[0m[33mwarn[0m] [0m[0m            int k,[0m
[0m[[0m[33mwarn[0m] [0m[0m            BigInteger a,[0m
[0m[[0m[33mwarn[0m] [0m[0m            BigInteger b)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            this(m, k, 0, 0, a, b, null, null);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\math\ec\ECCurve.java:1194:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic F2m([0m
[0m[[0m[33mwarn[0m] [0m[0m            int m,[0m
[0m[[0m[33mwarn[0m] [0m[0m            int k1,[0m
[0m[[0m[33mwarn[0m] [0m[0m            int k2,[0m
[0m[[0m[33mwarn[0m] [0m[0m            int k3,[0m
[0m[[0m[33mwarn[0m] [0m[0m            BigInteger a,[0m
[0m[[0m[33mwarn[0m] [0m[0m            BigInteger b)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            this(m, k1, k2, k3, a, b, null, null);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x500\X500Name.java:46:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic X500Name(X500NameStyle style, X500Name name)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.style = style;[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.rdns = name.rdns;[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.rdnSeq = name.rdnSeq;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\SubjectPublicKeyInfo.java:78:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic SubjectPublicKeyInfo([0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1Sequence  seq)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (seq.size() != 2)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new IllegalArgumentException("Bad sequence size: "[0m
[0m[[0m[33mwarn[0m] [0m[0m                    + seq.size());[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        Enumeration e = seq.getObjects();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.algId = AlgorithmIdentifier.getInstance(e.nextElement());[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.keyData = ASN1BitString.getInstance(e.nextElement());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\SubjectPublicKeyInfo.java:102:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic AlgorithmIdentifier getAlgorithmId()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return algId;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\SubjectPublicKeyInfo.java:130:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic ASN1Primitive getPublicKey()[0m
[0m[[0m[33mwarn[0m] [0m[0m        throws IOException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return ASN1Primitive.fromByteArray(keyData.getOctets());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\bc\ExternalValue.java:102:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic ASN1BitString getHashVal()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return new DERBitString(hashValue);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\GeneralName.java:67:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic GeneralName([0m
[0m[[0m[33mwarn[0m] [0m[0m        X509Name  dirName)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.obj = X500Name.getInstance(dirName);[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.tag = 4;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:45:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier C = new ASN1ObjectIdentifier("2.5.4.6");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:51:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier O = new ASN1ObjectIdentifier("2.5.4.10");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:57:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier OU = new ASN1ObjectIdentifier("2.5.4.11");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:63:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier T = new ASN1ObjectIdentifier("2.5.4.12");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:69:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier CN = new ASN1ObjectIdentifier("2.5.4.3");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:194:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier EmailAddress = PKCSObjectIdentifiers.pkcs_9_at_emailAddress;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:250:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final Hashtable OIDLookUp = DefaultSymbols;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:256:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final Hashtable SymbolLookUp = DefaultLookUp;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:403:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1Sequence  seq)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.seq = seq;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        Enumeration e = seq.getObjects();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (e.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1Set         set = ASN1Set.getInstance(((ASN1Encodable)e.nextElement()).toASN1Primitive());[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            for (int i = 0; i < set.size(); i++) [0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                   ASN1Sequence s = ASN1Sequence.getInstance(set.getObjectAt(i).toASN1Primitive());[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                   if (s.size() != 2)[0m
[0m[[0m[33mwarn[0m] [0m[0m                   {[0m
[0m[[0m[33mwarn[0m] [0m[0m                       throw new IllegalArgumentException("badly sized pair");[0m
[0m[[0m[33mwarn[0m] [0m[0m                   }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                   ordering.addElement(ASN1ObjectIdentifier.getInstance(s.getObjectAt(0)));[0m
[0m[[0m[33mwarn[0m] [0m[0m                   [0m
[0m[[0m[33mwarn[0m] [0m[0m                   ASN1Encodable value = s.getObjectAt(1);[0m
[0m[[0m[33mwarn[0m] [0m[0m                   if (value instanceof ASN1String && !(value instanceof ASN1UniversalString))[0m
[0m[[0m[33mwarn[0m] [0m[0m                   {[0m
[0m[[0m[33mwarn[0m] [0m[0m                       String v = ((ASN1String)value).getString();[0m
[0m[[0m[33mwarn[0m] [0m[0m                       if (v.length() > 0 && v.charAt(0) == '#')[0m
[0m[[0m[33mwarn[0m] [0m[0m                       {[0m
[0m[[0m[33mwarn[0m] [0m[0m                           values.addElement("\\" + v);[0m
[0m[[0m[33mwarn[0m] [0m[0m                       }[0m
[0m[[0m[33mwarn[0m] [0m[0m                       else[0m
[0m[[0m[33mwarn[0m] [0m[0m                       {[0m
[0m[[0m[33mwarn[0m] [0m[0m                           values.addElement(v);[0m
[0m[[0m[33mwarn[0m] [0m[0m                       }[0m
[0m[[0m[33mwarn[0m] [0m[0m                   }[0m
[0m[[0m[33mwarn[0m] [0m[0m                   else[0m
[0m[[0m[33mwarn[0m] [0m[0m                   {[0m
[0m[[0m[33mwarn[0m] [0m[0m                       try[0m
[0m[[0m[33mwarn[0m] [0m[0m                       {[0m
[0m[[0m[33mwarn[0m] [0m[0m                           values.addElement("#" + bytesToString(Hex.encode(value.toASN1Primitive().getEncoded(ASN1Encoding.DER))));[0m
[0m[[0m[33mwarn[0m] [0m[0m                       }[0m
[0m[[0m[33mwarn[0m] [0m[0m                       catch (IOException e1)[0m
[0m[[0m[33mwarn[0m] [0m[0m                       {[0m
[0m[[0m[33mwarn[0m] [0m[0m                           throw new IllegalArgumentException("cannot encode value");[0m
[0m[[0m[33mwarn[0m] [0m[0m                       }[0m
[0m[[0m[33mwarn[0m] [0m[0m                   }[0m
[0m[[0m[33mwarn[0m] [0m[0m                   added.addElement((i != 0) ? TRUE : FALSE);  // to allow earlier JDK compatibility[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:466:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        Hashtable  attributes)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(null, attributes);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:499:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector                   ordering,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Hashtable                attributes,[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509NameEntryConverter   converter)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.converter = converter;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (ordering != null)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            for (int i = 0; i != ordering.size(); i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                this.ordering.addElement(ordering.elementAt(i));[0m
[0m[[0m[33mwarn[0m] [0m[0m                this.added.addElement(FALSE);[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        else[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            Enumeration     e = attributes.keys();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            while (e.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                this.ordering.addElement(e.nextElement());[0m
[0m[[0m[33mwarn[0m] [0m[0m                this.added.addElement(FALSE);[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        for (int i = 0; i != this.ordering.size(); i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1ObjectIdentifier     oid = (ASN1ObjectIdentifier)this.ordering.elementAt(i);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (attributes.get(oid) == null)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                throw new IllegalArgumentException("No attribute for object id - " + oid.getId() + " - passed to distinguished name");[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.values.addElement(attributes.get(oid)); // copy the hash table[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:542:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector  oids,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector  values)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(oids, values, new X509DefaultEntryConverter());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:556:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector                  oids,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector                  values,[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509NameEntryConverter  converter)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.converter = converter;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (oids.size() != values.size())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new IllegalArgumentException("oids vector must be same length as values.");[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        for (int i = 0; i < oids.size(); i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.ordering.addElement(oids.elementAt(i));[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.values.addElement(values.elementAt(i));[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.added.addElement(FALSE);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:591:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        String  dirName)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(DefaultReverse, DefaultLookUp, dirName);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:604:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        String                  dirName,[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509NameEntryConverter  converter)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(DefaultReverse, DefaultLookUp, dirName, converter);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:618:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean reverse,[0m
[0m[[0m[33mwarn[0m] [0m[0m        String  dirName)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(reverse, DefaultLookUp, dirName);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:633:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean                 reverse,[0m
[0m[[0m[33mwarn[0m] [0m[0m        String                  dirName,[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509NameEntryConverter  converter)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(reverse, DefaultLookUp, dirName, converter);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:655:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean     reverse,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Hashtable   lookUp,[0m
[0m[[0m[33mwarn[0m] [0m[0m        String      dirName)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(reverse, lookUp, dirName, new X509DefaultEntryConverter());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Name.java:38:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic class X509Name[0m
[0m[[0m[33mwarn[0m] [0m[0m    extends ASN1Object[0m
[0m[[0m[33mwarn[0m] [0m[0m{[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * country code - StringType(SIZE(2))[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use a X500NameStyle[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier C = new ASN1ObjectIdentifier("2.5.4.6");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * organization - StringType(SIZE(1..64))[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use a X500NameStyle[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier O = new ASN1ObjectIdentifier("2.5.4.10");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * organizational unit name - StringType(SIZE(1..64))[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use a X500NameStyle[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier OU = new ASN1ObjectIdentifier("2.5.4.11");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Title[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use a X500NameStyle[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier T = new ASN1ObjectIdentifier("2.5.4.12");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * common name - StringType(SIZE(1..64))[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use a X500NameStyle[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier CN = new ASN1ObjectIdentifier("2.5.4.3");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * device serial number name - StringType(SIZE(1..64))[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier SN = new ASN1ObjectIdentifier("2.5.4.5");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * street - StringType(SIZE(1..64))[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier STREET = new ASN1ObjectIdentifier("2.5.4.9");[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * device serial number name - StringType(SIZE(1..64))[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier SERIALNUMBER = SN;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * locality name - StringType(SIZE(1..64))[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier L = new ASN1ObjectIdentifier("2.5.4.7");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * state, or province name - StringType(SIZE(1..64))[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier ST = new ASN1ObjectIdentifier("2.5.4.8");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Naming attributes of type X520name[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier SURNAME = new ASN1ObjectIdentifier("2.5.4.4");[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier GIVENNAME = new ASN1ObjectIdentifier("2.5.4.42");[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier INITIALS = new ASN1ObjectIdentifier("2.5.4.43");[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier GENERATION = new ASN1ObjectIdentifier("2.5.4.44");[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier UNIQUE_IDENTIFIER = new ASN1ObjectIdentifier("2.5.4.45");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * businessCategory - DirectoryString(SIZE(1..128)[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier BUSINESS_CATEGORY = new ASN1ObjectIdentifier([0m
[0m[[0m[33mwarn[0m] [0m[0m                    "2.5.4.15");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * postalCode - DirectoryString(SIZE(1..40)[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier POSTAL_CODE = new ASN1ObjectIdentifier([0m
[0m[[0m[33mwarn[0m] [0m[0m                    "2.5.4.17");[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * dnQualifier - DirectoryString(SIZE(1..64)[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier DN_QUALIFIER = new ASN1ObjectIdentifier([0m
[0m[[0m[33mwarn[0m] [0m[0m                    "2.5.4.46");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * RFC 3039 Pseudonym - DirectoryString(SIZE(1..64)[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier PSEUDONYM = new ASN1ObjectIdentifier([0m
[0m[[0m[33mwarn[0m] [0m[0m                    "2.5.4.65");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * RFC 3039 DateOfBirth - GeneralizedTime - YYYYMMDD000000Z[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier DATE_OF_BIRTH = new ASN1ObjectIdentifier([0m
[0m[[0m[33mwarn[0m] [0m[0m                    "1.3.6.1.5.5.7.9.1");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * RFC 3039 PlaceOfBirth - DirectoryString(SIZE(1..128)[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier PLACE_OF_BIRTH = new ASN1ObjectIdentifier([0m
[0m[[0m[33mwarn[0m] [0m[0m                    "1.3.6.1.5.5.7.9.2");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * RFC 3039 Gender - PrintableString (SIZE(1)) -- "M", "F", "m" or "f"[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier GENDER = new ASN1ObjectIdentifier([0m
[0m[[0m[33mwarn[0m] [0m[0m                    "1.3.6.1.5.5.7.9.3");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * RFC 3039 CountryOfCitizenship - PrintableString (SIZE (2)) -- ISO 3166[0m
[0m[[0m[33mwarn[0m] [0m[0m     * codes only[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier COUNTRY_OF_CITIZENSHIP = new ASN1ObjectIdentifier([0m
[0m[[0m[33mwarn[0m] [0m[0m                    "1.3.6.1.5.5.7.9.4");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * RFC 3039 CountryOfResidence - PrintableString (SIZE (2)) -- ISO 3166[0m
[0m[[0m[33mwarn[0m] [0m[0m     * codes only[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier COUNTRY_OF_RESIDENCE = new ASN1ObjectIdentifier([0m
[0m[[0m[33mwarn[0m] [0m[0m                    "1.3.6.1.5.5.7.9.5");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * ISIS-MTT NameAtBirth - DirectoryString(SIZE(1..64)[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier NAME_AT_BIRTH =  new ASN1ObjectIdentifier("1.3.36.8.3.14");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * RFC 3039 PostalAddress - SEQUENCE SIZE (1..6) OF[0m
[0m[[0m[33mwarn[0m] [0m[0m     * DirectoryString(SIZE(1..30))[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier POSTAL_ADDRESS = new ASN1ObjectIdentifier("2.5.4.16");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * RFC 2256 dmdName[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier DMD_NAME = new ASN1ObjectIdentifier("2.5.4.54");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * id-at-telephoneNumber[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier TELEPHONE_NUMBER = X509ObjectIdentifiers.id_at_telephoneNumber;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * id-at-name[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier NAME = X509ObjectIdentifiers.id_at_name;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Email address (RSA PKCS#9 extension) - IA5String.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * <p>Note: if you're trying to be ultra orthodox, don't use this! It shouldn't be in here.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use a X500NameStyle[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier EmailAddress = PKCSObjectIdentifiers.pkcs_9_at_emailAddress;[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * more from PKCS#9[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier UnstructuredName = PKCSObjectIdentifiers.pkcs_9_at_unstructuredName;[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier UnstructuredAddress = PKCSObjectIdentifiers.pkcs_9_at_unstructuredAddress;[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * email address in Verisign certificates[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier E = EmailAddress;[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    /*[0m
[0m[[0m[33mwarn[0m] [0m[0m     * others...[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier DC = new ASN1ObjectIdentifier("0.9.2342.19200300.100.1.25");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * LDAP User id.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier UID = new ASN1ObjectIdentifier("0.9.2342.19200300.100.1.1");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * determines whether or not strings should be processed and printed[0m
[0m[[0m[33mwarn[0m] [0m[0m     * from back to front.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static boolean DefaultReverse = false;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * default look up table translating OID values into their common symbols following[0m
[0m[[0m[33mwarn[0m] [0m[0m     * the convention in RFC 2253 with a few extras[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final Hashtable DefaultSymbols = new Hashtable();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * look up table translating OID values into their common symbols following the convention in RFC 2253[0m
[0m[[0m[33mwarn[0m] [0m[0m     * [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final Hashtable RFC2253Symbols = new Hashtable();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * look up table translating OID values into their common symbols following the convention in RFC 1779[0m
[0m[[0m[33mwarn[0m] [0m[0m     * [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final Hashtable RFC1779Symbols = new Hashtable();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * look up table translating common symbols into their OIDS.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final Hashtable DefaultLookUp = new Hashtable();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * look up table translating OID values into their common symbols[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use DefaultSymbols[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final Hashtable OIDLookUp = DefaultSymbols;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * look up table translating string values into their OIDS -[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use DefaultLookUp[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final Hashtable SymbolLookUp = DefaultLookUp;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private static final Boolean TRUE = new Boolean(true); // for J2ME compatibility[0m
[0m[[0m[33mwarn[0m] [0m[0m    private static final Boolean FALSE = new Boolean(false);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    static[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(C, "C");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(O, "O");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(T, "T");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(OU, "OU");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(CN, "CN");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(L, "L");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(ST, "ST");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(SN, "SERIALNUMBER");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(EmailAddress, "E");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(DC, "DC");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(UID, "UID");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(STREET, "STREET");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(SURNAME, "SURNAME");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(GIVENNAME, "GIVENNAME");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(INITIALS, "INITIALS");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(GENERATION, "GENERATION");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(UnstructuredAddress, "unstructuredAddress");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(UnstructuredName, "unstructuredName");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(UNIQUE_IDENTIFIER, "UniqueIdentifier");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(DN_QUALIFIER, "DN");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(PSEUDONYM, "Pseudonym");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(POSTAL_ADDRESS, "PostalAddress");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(NAME_AT_BIRTH, "NameAtBirth");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(COUNTRY_OF_CITIZENSHIP, "CountryOfCitizenship");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(COUNTRY_OF_RESIDENCE, "CountryOfResidence");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(GENDER, "Gender");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(PLACE_OF_BIRTH, "PlaceOfBirth");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(DATE_OF_BIRTH, "DateOfBirth");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(POSTAL_CODE, "PostalCode");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(BUSINESS_CATEGORY, "BusinessCategory");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(TELEPHONE_NUMBER, "TelephoneNumber");[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultSymbols.put(NAME, "Name");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC2253Symbols.put(C, "C");[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC2253Symbols.put(O, "O");[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC2253Symbols.put(OU, "OU");[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC2253Symbols.put(CN, "CN");[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC2253Symbols.put(L, "L");[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC2253Symbols.put(ST, "ST");[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC2253Symbols.put(STREET, "STREET");[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC2253Symbols.put(DC, "DC");[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC2253Symbols.put(UID, "UID");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC1779Symbols.put(C, "C");[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC1779Symbols.put(O, "O");[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC1779Symbols.put(OU, "OU");[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC1779Symbols.put(CN, "CN");[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC1779Symbols.put(L, "L");[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC1779Symbols.put(ST, "ST");[0m
[0m[[0m[33mwarn[0m] [0m[0m        RFC1779Symbols.put(STREET, "STREET");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("c", C);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("o", O);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("t", T);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("ou", OU);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("cn", CN);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("l", L);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("st", ST);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("sn", SN);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("serialnumber", SN);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("street", STREET);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("emailaddress", E);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("dc", DC);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("e", E);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("uid", UID);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("surname", SURNAME);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("givenname", GIVENNAME);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("initials", INITIALS);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("generation", GENERATION);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("unstructuredaddress", UnstructuredAddress);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("unstructuredname", UnstructuredName);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("uniqueidentifier", UNIQUE_IDENTIFIER);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("dn", DN_QUALIFIER);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("pseudonym", PSEUDONYM);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("postaladdress", POSTAL_ADDRESS);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("nameofbirth", NAME_AT_BIRTH);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("countryofcitizenship", COUNTRY_OF_CITIZENSHIP);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("countryofresidence", COUNTRY_OF_RESIDENCE);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("gender", GENDER);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("placeofbirth", PLACE_OF_BIRTH);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("dateofbirth", DATE_OF_BIRTH);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("postalcode", POSTAL_CODE);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("businesscategory", BUSINESS_CATEGORY);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("telephonenumber", TELEPHONE_NUMBER);[0m
[0m[[0m[33mwarn[0m] [0m[0m        DefaultLookUp.put("name", NAME);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private X509NameEntryConverter  converter = null;[0m
[0m[[0m[33mwarn[0m] [0m[0m    private Vector                  ordering = new Vector();[0m
[0m[[0m[33mwarn[0m] [0m[0m    private Vector                  values = new Vector();[0m
[0m[[0m[33mwarn[0m] [0m[0m    private Vector                  added = new Vector();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private ASN1Sequence            seq;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private boolean                 isHashCodeCalculated;[0m
[0m[[0m[33mwarn[0m] [0m[0m    private int                     hashCodeValue;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Return a X509Name based on the passed in tagged object.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * [0m
[0m[[0m[33mwarn[0m] [0m[0m     * @param obj tag object holding name.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @param explicit true if explicitly tagged false otherwise.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return the X509Name[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static X509Name getInstance([0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1TaggedObject obj,[0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean          explicit)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return getInstance(ASN1Sequence.getInstance(obj, explicit));[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static X509Name getInstance([0m
[0m[[0m[33mwarn[0m] [0m[0m        Object  obj)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (obj instanceof X509Name)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return (X509Name)obj;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        else if (obj instanceof X500Name)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return new X509Name(ASN1Sequence.getInstance(((X500Name)obj).toASN1Primitive()));[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        else if (obj != null)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return new X509Name(ASN1Sequence.getInstance(obj));[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return null;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    protected X509Name()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        // constructure use by new X500 Name class[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Constructor from ASN1Sequence[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * the principal will be a list of constructed sets, each containing an (OID, String) pair.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use X500Name.getInstance()[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1Sequence  seq)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.seq = seq;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        Enumeration e = seq.getObjects();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (e.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1Set         set = ASN1Set.getInstance(((ASN1Encodable)e.nextElement()).toASN1Primitive());[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            for (int i = 0; i < set.size(); i++) [0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                   ASN1Sequence s = ASN1Sequence.getInstance(set.getObjectAt(i).toASN1Primitive());[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                   if (s.size() != 2)[0m
[0m[[0m[33mwarn[0m] [0m[0m                   {[0m
[0m[[0m[33mwarn[0m] [0m[0m                       throw new IllegalArgumentException("badly sized pair");[0m
[0m[[0m[33mwarn[0m] [0m[0m                   }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                   ordering.addElement(ASN1ObjectIdentifier.getInstance(s.getObjectAt(0)));[0m
[0m[[0m[33mwarn[0m] [0m[0m                   [0m
[0m[[0m[33mwarn[0m] [0m[0m                   ASN1Encodable value = s.getObjectAt(1);[0m
[0m[[0m[33mwarn[0m] [0m[0m                   if (value instanceof ASN1String && !(value instanceof ASN1UniversalString))[0m
[0m[[0m[33mwarn[0m] [0m[0m                   {[0m
[0m[[0m[33mwarn[0m] [0m[0m                       String v = ((ASN1String)value).getString();[0m
[0m[[0m[33mwarn[0m] [0m[0m                       if (v.length() > 0 && v.charAt(0) == '#')[0m
[0m[[0m[33mwarn[0m] [0m[0m                       {[0m
[0m[[0m[33mwarn[0m] [0m[0m                           values.addElement("\\" + v);[0m
[0m[[0m[33mwarn[0m] [0m[0m                       }[0m
[0m[[0m[33mwarn[0m] [0m[0m                       else[0m
[0m[[0m[33mwarn[0m] [0m[0m                       {[0m
[0m[[0m[33mwarn[0m] [0m[0m                           values.addElement(v);[0m
[0m[[0m[33mwarn[0m] [0m[0m                       }[0m
[0m[[0m[33mwarn[0m] [0m[0m                   }[0m
[0m[[0m[33mwarn[0m] [0m[0m                   else[0m
[0m[[0m[33mwarn[0m] [0m[0m                   {[0m
[0m[[0m[33mwarn[0m] [0m[0m                       try[0m
[0m[[0m[33mwarn[0m] [0m[0m                       {[0m
[0m[[0m[33mwarn[0m] [0m[0m                           values.addElement("#" + bytesToString(Hex.encode(value.toASN1Primitive().getEncoded(ASN1Encoding.DER))));[0m
[0m[[0m[33mwarn[0m] [0m[0m                       }[0m
[0m[[0m[33mwarn[0m] [0m[0m                       catch (IOException e1)[0m
[0m[[0m[33mwarn[0m] [0m[0m                       {[0m
[0m[[0m[33mwarn[0m] [0m[0m                           throw new IllegalArgumentException("cannot encode value");[0m
[0m[[0m[33mwarn[0m] [0m[0m                       }[0m
[0m[[0m[33mwarn[0m] [0m[0m                   }[0m
[0m[[0m[33mwarn[0m] [0m[0m                   added.addElement((i != 0) ? TRUE : FALSE);  // to allow earlier JDK compatibility[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * constructor from a table of attributes.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * <p>[0m
[0m[[0m[33mwarn[0m] [0m[0m     * it's is assumed the table contains OID/String pairs, and the contents[0m
[0m[[0m[33mwarn[0m] [0m[0m     * of the table are copied into an internal table as part of the[0m
[0m[[0m[33mwarn[0m] [0m[0m     * construction process.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * <p>[0m
[0m[[0m[33mwarn[0m] [0m[0m     * <b>Note:</b> if the name you are trying to generate should be[0m
[0m[[0m[33mwarn[0m] [0m[0m     * following a specific ordering, you should use the constructor[0m
[0m[[0m[33mwarn[0m] [0m[0m     * with the ordering specified below.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use an ordered constructor! The hashtable ordering is rarely correct[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        Hashtable  attributes)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(null, attributes);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Constructor from a table of attributes with ordering.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * <p>[0m
[0m[[0m[33mwarn[0m] [0m[0m     * it's is assumed the table contains OID/String pairs, and the contents[0m
[0m[[0m[33mwarn[0m] [0m[0m     * of the table are copied into an internal table as part of the[0m
[0m[[0m[33mwarn[0m] [0m[0m     * construction process. The ordering vector should contain the OIDs[0m
[0m[[0m[33mwarn[0m] [0m[0m     * in the order they are meant to be encoded or printed in toString.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector      ordering,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Hashtable   attributes)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(ordering, attributes, new X509DefaultEntryConverter());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Constructor from a table of attributes with ordering.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * <p>[0m
[0m[[0m[33mwarn[0m] [0m[0m     * it's is assumed the table contains OID/String pairs, and the contents[0m
[0m[[0m[33mwarn[0m] [0m[0m     * of the table are copied into an internal table as part of the[0m
[0m[[0m[33mwarn[0m] [0m[0m     * construction process. The ordering vector should contain the OIDs[0m
[0m[[0m[33mwarn[0m] [0m[0m     * in the order they are meant to be encoded or printed in toString.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * <p>[0m
[0m[[0m[33mwarn[0m] [0m[0m     * The passed in converter will be used to convert the strings into their[0m
[0m[[0m[33mwarn[0m] [0m[0m     * ASN.1 counterparts.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use X500Name, X500NameBuilder[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector                   ordering,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Hashtable                attributes,[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509NameEntryConverter   converter)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.converter = converter;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (ordering != null)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            for (int i = 0; i != ordering.size(); i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                this.ordering.addElement(ordering.elementAt(i));[0m
[0m[[0m[33mwarn[0m] [0m[0m                this.added.addElement(FALSE);[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        else[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            Enumeration     e = attributes.keys();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            while (e.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                this.ordering.addElement(e.nextElement());[0m
[0m[[0m[33mwarn[0m] [0m[0m                this.added.addElement(FALSE);[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        for (int i = 0; i != this.ordering.size(); i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1ObjectIdentifier     oid = (ASN1ObjectIdentifier)this.ordering.elementAt(i);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (attributes.get(oid) == null)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                throw new IllegalArgumentException("No attribute for object id - " + oid.getId() + " - passed to distinguished name");[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.values.addElement(attributes.get(oid)); // copy the hash table[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Takes two vectors one of the oids and the other of the values.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use X500Name, X500NameBuilder[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector  oids,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector  values)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(oids, values, new X509DefaultEntryConverter());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Takes two vectors one of the oids and the other of the values.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * <p>[0m
[0m[[0m[33mwarn[0m] [0m[0m     * The passed in converter will be used to convert the strings into their[0m
[0m[[0m[33mwarn[0m] [0m[0m     * ASN.1 counterparts.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use X500Name, X500NameBuilder[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector                  oids,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector                  values,[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509NameEntryConverter  converter)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.converter = converter;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (oids.size() != values.size())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new IllegalArgumentException("oids vector must be same length as values.");[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        for (int i = 0; i < oids.size(); i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.ordering.addElement(oids.elementAt(i));[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.values.addElement(values.elementAt(i));[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.added.addElement(FALSE);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m//    private Boolean isEncoded(String s)[0m
[0m[[0m[33mwarn[0m] [0m[0m//    {[0m
[0m[[0m[33mwarn[0m] [0m[0m//        if (s.charAt(0) == '#')[0m
[0m[[0m[33mwarn[0m] [0m[0m//        {[0m
[0m[[0m[33mwarn[0m] [0m[0m//            return TRUE;[0m
[0m[[0m[33mwarn[0m] [0m[0m//        }[0m
[0m[[0m[33mwarn[0m] [0m[0m//[0m
[0m[[0m[33mwarn[0m] [0m[0m//        return FALSE;[0m
[0m[[0m[33mwarn[0m] [0m[0m//    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Takes an X509 dir name as a string of the format "C=AU, ST=Victoria", or[0m
[0m[[0m[33mwarn[0m] [0m[0m     * some such, converting it into an ordered set of name attributes.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use X500Name, X500NameBuilder[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        String  dirName)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(DefaultReverse, DefaultLookUp, dirName);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Takes an X509 dir name as a string of the format "C=AU, ST=Victoria", or[0m
[0m[[0m[33mwarn[0m] [0m[0m     * some such, converting it into an ordered set of name attributes with each[0m
[0m[[0m[33mwarn[0m] [0m[0m     * string value being converted to its associated ASN.1 type using the passed[0m
[0m[[0m[33mwarn[0m] [0m[0m     * in converter.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use X500Name, X500NameBuilder[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        String                  dirName,[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509NameEntryConverter  converter)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(DefaultReverse, DefaultLookUp, dirName, converter);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Takes an X509 dir name as a string of the format "C=AU, ST=Victoria", or[0m
[0m[[0m[33mwarn[0m] [0m[0m     * some such, converting it into an ordered set of name attributes. If reverse[0m
[0m[[0m[33mwarn[0m] [0m[0m     * is true, create the encoded version of the sequence starting from the[0m
[0m[[0m[33mwarn[0m] [0m[0m     * last element in the string.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use X500Name, X500NameBuilder[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean reverse,[0m
[0m[[0m[33mwarn[0m] [0m[0m        String  dirName)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(reverse, DefaultLookUp, dirName);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Takes an X509 dir name as a string of the format "C=AU, ST=Victoria", or[0m
[0m[[0m[33mwarn[0m] [0m[0m     * some such, converting it into an ordered set of name attributes with each[0m
[0m[[0m[33mwarn[0m] [0m[0m     * string value being converted to its associated ASN.1 type using the passed[0m
[0m[[0m[33mwarn[0m] [0m[0m     * in converter. If reverse is true the ASN.1 sequence representing the DN will[0m
[0m[[0m[33mwarn[0m] [0m[0m     * be built by starting at the end of the string, rather than the start.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use X500Name, X500NameBuilder[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean                 reverse,[0m
[0m[[0m[33mwarn[0m] [0m[0m        String                  dirName,[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509NameEntryConverter  converter)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(reverse, DefaultLookUp, dirName, converter);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Takes an X509 dir name as a string of the format "C=AU, ST=Victoria", or[0m
[0m[[0m[33mwarn[0m] [0m[0m     * some such, converting it into an ordered set of name attributes. lookUp[0m
[0m[[0m[33mwarn[0m] [0m[0m     * should provide a table of lookups, indexed by lowercase only strings and[0m
[0m[[0m[33mwarn[0m] [0m[0m     * yielding a ASN1ObjectIdentifier, other than that OID. and numeric oids[0m
[0m[[0m[33mwarn[0m] [0m[0m     * will be processed automatically.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * <br>[0m
[0m[[0m[33mwarn[0m] [0m[0m     * If reverse is true, create the encoded version of the sequence[0m
[0m[[0m[33mwarn[0m] [0m[0m     * starting from the last element in the string.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @param reverse true if we should start scanning from the end (RFC 2553).[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @param lookUp table of names and their oids.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @param dirName the X.500 string to be parsed.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use X500Name, X500NameBuilder[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean     reverse,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Hashtable   lookUp,[0m
[0m[[0m[33mwarn[0m] [0m[0m        String      dirName)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(reverse, lookUp, dirName, new X509DefaultEntryConverter());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private ASN1ObjectIdentifier decodeOID([0m
[0m[[0m[33mwarn[0m] [0m[0m        String      name,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Hashtable   lookUp)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        name = name.trim();[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (Strings.toUpperCase(name).startsWith("OID."))[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return new ASN1ObjectIdentifier(name.substring(4));[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        else if (name.charAt(0) >= '0' && name.charAt(0) <= '9')[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return new ASN1ObjectIdentifier(name);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1ObjectIdentifier oid = (ASN1ObjectIdentifier)lookUp.get(Strings.toLowerCase(name));[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (oid == null)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new IllegalArgumentException("Unknown object id - " + name + " - passed to distinguished name");[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return oid;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private String unescape(String elt)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (elt.length() == 0 || (elt.indexOf('\\') < 0 && elt.indexOf('"') < 0))[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return elt.trim();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        char[] elts = elt.toCharArray();[0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean escaped = false;[0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean quoted = false;[0m
[0m[[0m[33mwarn[0m] [0m[0m        StringBuffer buf = new StringBuffer(elt.length());[0m
[0m[[0m[33mwarn[0m] [0m[0m        int start = 0;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        // if it's an escaped hash string and not an actual encoding in string form[0m
[0m[[0m[33mwarn[0m] [0m[0m        // we need to leave it escaped.[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (elts[0] == '\\')[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (elts[1] == '#')[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                start = 2;[0m
[0m[[0m[33mwarn[0m] [0m[0m                buf.append("\\#");[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean nonWhiteSpaceEncountered = false;[0m
[0m[[0m[33mwarn[0m] [0m[0m        int     lastEscaped = 0;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        for (int i = start; i != elts.length; i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            char c = elts[i];[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (c != ' ')[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                nonWhiteSpaceEncountered = true;[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (c == '"')[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                if (!escaped)[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    quoted = !quoted;[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m                else[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    buf.append(c);[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m                escaped = false;[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m            else if (c == '\\' && !(escaped || quoted))[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                escaped = true;[0m
[0m[[0m[33mwarn[0m] [0m[0m                lastEscaped = buf.length();[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m            else[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                if (c == ' ' && !escaped && !nonWhiteSpaceEncountered)[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    continue;[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m                buf.append(c);[0m
[0m[[0m[33mwarn[0m] [0m[0m                escaped = false;[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (buf.length() > 0)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            while (buf.charAt(buf.length() - 1) == ' ' && lastEscaped != (buf.length() - 1))[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                buf.setLength(buf.length() - 1);[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return buf.toString();[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Takes an X509 dir name as a string of the format "C=AU, ST=Victoria", or[0m
[0m[[0m[33mwarn[0m] [0m[0m     * some such, converting it into an ordered set of name attributes. lookUp[0m
[0m[[0m[33mwarn[0m] [0m[0m     * should provide a table of lookups, indexed by lowercase only strings and[0m
[0m[[0m[33mwarn[0m] [0m[0m     * yielding a ASN1ObjectIdentifier, other than that OID. and numeric oids[0m
[0m[[0m[33mwarn[0m] [0m[0m     * will be processed automatically. The passed in converter is used to convert the[0m
[0m[[0m[33mwarn[0m] [0m[0m     * string values to the right of each equals sign to their ASN.1 counterparts.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * <br>[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @param reverse true if we should start scanning from the end, false otherwise.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @param lookUp table of names and oids.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @param dirName the string dirName[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @param converter the converter to convert string values into their ASN.1 equivalents[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Name([0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean                 reverse,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Hashtable               lookUp,[0m
[0m[[0m[33mwarn[0m] [0m[0m        String                  dirName,[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509NameEntryConverter  converter)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.converter = converter;[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509NameTokenizer   nTok = new X509NameTokenizer(dirName);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (nTok.hasMoreTokens())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            String  token = nTok.nextToken();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (token.indexOf('+') > 0)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                X509NameTokenizer   pTok = new X509NameTokenizer(token, '+');[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                addEntry(lookUp, pTok.nextToken(), FALSE);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                while (pTok.hasMoreTokens())[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    addEntry(lookUp, pTok.nextToken(), TRUE);[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m            else[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                addEntry(lookUp, token, FALSE);[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (reverse)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            Vector  o = new Vector();[0m
[0m[[0m[33mwarn[0m] [0m[0m            Vector  v = new Vector();[0m
[0m[[0m[33mwarn[0m] [0m[0m            Vector  a = new Vector();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            int count = 1;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            for (int i = 0; i < this.ordering.size(); i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                if (((Boolean)this.added.elementAt(i)).booleanValue())[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    o.insertElementAt(this.ordering.elementAt(i), count);[0m
[0m[[0m[33mwarn[0m] [0m[0m                    v.insertElementAt(this.values.elementAt(i), count);[0m
[0m[[0m[33mwarn[0m] [0m[0m                    a.insertElementAt(this.added.elementAt(i), count);[0m
[0m[[0m[33mwarn[0m] [0m[0m                    count++;[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m                else[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    o.insertElementAt(this.ordering.elementAt(i), 0);[0m
[0m[[0m[33mwarn[0m] [0m[0m                    v.insertElementAt(this.values.elementAt(i), 0);[0m
[0m[[0m[33mwarn[0m] [0m[0m                    a.insertElementAt(this.added.elementAt(i), 0);[0m
[0m[[0m[33mwarn[0m] [0m[0m                    count = 1;[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.ordering = o;[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.values = v;[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.added = a;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private void addEntry(Hashtable lookUp, String token, Boolean isAdded)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509NameTokenizer vTok;[0m
[0m[[0m[33mwarn[0m] [0m[0m        String name;[0m
[0m[[0m[33mwarn[0m] [0m[0m        String value;ASN1ObjectIdentifier oid;[0m
[0m[[0m[33mwarn[0m] [0m[0m        vTok = new X509NameTokenizer(token, '=');[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        name = vTok.nextToken();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (!vTok.hasMoreTokens())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m           throw new IllegalArgumentException("badly formatted directory string");[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        value = vTok.nextToken();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        oid = decodeOID(name, lookUp);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.ordering.addElement(oid);[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.values.addElement(unescape(value));[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.added.addElement(isAdded);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * return a vector of the oids in the name, in the order they were found.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public Vector getOIDs()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector  v = new Vector();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        for (int i = 0; i != ordering.size(); i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            v.addElement(ordering.elementAt(i));[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return v;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * return a vector of the values found in the name, in the order they[0m
[0m[[0m[33mwarn[0m] [0m[0m     * were found.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public Vector getValues()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector  v = new Vector();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        for (int i = 0; i != values.size(); i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            v.addElement(values.elementAt(i));[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return v;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * return a vector of the values found in the name, in the order they[0m
[0m[[0m[33mwarn[0m] [0m[0m     * were found, with the DN label corresponding to passed in oid.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public Vector getValues([0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1ObjectIdentifier oid)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector  v = new Vector();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        for (int i = 0; i != values.size(); i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (ordering.elementAt(i).equals(oid))[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                String val = (String)values.elementAt(i);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                if (val.length() > 2 && val.charAt(0) == '\\' && val.charAt(1) == '#')[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    v.addElement(val.substring(1));[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m                else[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    v.addElement(val);[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return v;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive toASN1Primitive()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (seq == null)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1EncodableVector  vec = new ASN1EncodableVector();[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1EncodableVector  sVec = new ASN1EncodableVector();[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1ObjectIdentifier  lstOid = null;[0m
[0m[[0m[33mwarn[0m] [0m[0m            [0m
[0m[[0m[33mwarn[0m] [0m[0m            for (int i = 0; i != ordering.size(); i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                ASN1EncodableVector     v = new ASN1EncodableVector(2);[0m
[0m[[0m[33mwarn[0m] [0m[0m                ASN1ObjectIdentifier     oid = (ASN1ObjectIdentifier)ordering.elementAt(i);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                v.add(oid);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                String  str = (String)values.elementAt(i);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                v.add(converter.getConvertedValue(oid, str));[0m
[0m[[0m[33mwarn[0m] [0m[0m [0m
[0m[[0m[33mwarn[0m] [0m[0m                if (lstOid == null [0m
[0m[[0m[33mwarn[0m] [0m[0m                    || ((Boolean)this.added.elementAt(i)).booleanValue())[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    sVec.add(new DERSequence(v));[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m                else[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    vec.add(new DERSet(sVec));[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                    sVec = new ASN1EncodableVector();[0m
[0m[[0m[33mwarn[0m] [0m[0m                    sVec.add(new DERSequence(v));[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m                [0m
[0m[[0m[33mwarn[0m] [0m[0m                lstOid = oid;[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m            [0m
[0m[[0m[33mwarn[0m] [0m[0m            vec.add(new DERSet(sVec));[0m
[0m[[0m[33mwarn[0m] [0m[0m            [0m
[0m[[0m[33mwarn[0m] [0m[0m            seq = new DERSequence(vec);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return seq;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @param inOrder if true the order of both X509 names must be the same,[0m
[0m[[0m[33mwarn[0m] [0m[0m     * as well as the values associated with each element.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public boolean equals(Object obj, boolean inOrder)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (!inOrder)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return this.equals(obj);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (obj == this)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return true;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (!(obj instanceof X509Name || obj instanceof ASN1Sequence))[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return false;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1Primitive derO = ((ASN1Encodable)obj).toASN1Primitive();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (this.toASN1Primitive().equals(derO))[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return true;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509Name other;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        try[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            other = X509Name.getInstance(obj);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        catch (IllegalArgumentException e)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return false;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        int      orderingSize = ordering.size();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (orderingSize != other.ordering.size())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return false;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        for (int i = 0; i < orderingSize; i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1ObjectIdentifier  oid = (ASN1ObjectIdentifier)ordering.elementAt(i);[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1ObjectIdentifier  oOid = (ASN1ObjectIdentifier)other.ordering.elementAt(i);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (oid.equals(oOid))[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                String value = (String)values.elementAt(i);[0m
[0m[[0m[33mwarn[0m] [0m[0m                String oValue = (String)other.values.elementAt(i);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                if (!equivalentStrings(value, oValue))[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    return false;[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m            else[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                return false;[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return true;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public int hashCode()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (isHashCodeCalculated)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return hashCodeValue;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        isHashCodeCalculated = true;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        // this needs to be order independent, like equals[0m
[0m[[0m[33mwarn[0m] [0m[0m        for (int i = 0; i != ordering.size(); i += 1)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            String value = (String)values.elementAt(i);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            value = canonicalize(value);[0m
[0m[[0m[33mwarn[0m] [0m[0m            value = stripInternalSpaces(value);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            hashCodeValue ^= ordering.elementAt(i).hashCode();[0m
[0m[[0m[33mwarn[0m] [0m[0m            hashCodeValue ^= value.hashCode();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return hashCodeValue;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * test for equality - note: case is ignored.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public boolean equals(Object obj)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (obj == this)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return true;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (!(obj instanceof X509Name || obj instanceof ASN1Sequence))[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return false;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        [0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1Primitive derO = ((ASN1Encodable)obj).toASN1Primitive();[0m
[0m[[0m[33mwarn[0m] [0m[0m        [0m
[0m[[0m[33mwarn[0m] [0m[0m        if (this.toASN1Primitive().equals(derO))[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return true;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509Name other;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        try[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            other = X509Name.getInstance(obj);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        catch (IllegalArgumentException e)[0m
[0m[[0m[33mwarn[0m] [0m[0m        { [0m
[0m[[0m[33mwarn[0m] [0m[0m            return false;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        int      orderingSize = ordering.size();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (orderingSize != other.ordering.size())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return false;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        [0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean[] indexes = new boolean[orderingSize];[0m
[0m[[0m[33mwarn[0m] [0m[0m        int       start, end, delta;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (ordering.elementAt(0).equals(other.ordering.elementAt(0)))   // guess forward[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            start = 0;[0m
[0m[[0m[33mwarn[0m] [0m[0m            end = orderingSize;[0m
[0m[[0m[33mwarn[0m] [0m[0m            delta = 1;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        else  // guess reversed - most common problem[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            start = orderingSize - 1;[0m
[0m[[0m[33mwarn[0m] [0m[0m            end = -1;[0m
[0m[[0m[33mwarn[0m] [0m[0m            delta = -1;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        for (int i = start; i != end; i += delta)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            boolean              found = false;[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1ObjectIdentifier  oid = (ASN1ObjectIdentifier)ordering.elementAt(i);[0m
[0m[[0m[33mwarn[0m] [0m[0m            String               value = (String)values.elementAt(i);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            for (int j = 0; j < orderingSize; j++)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                if (indexes[j])[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    continue;[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                ASN1ObjectIdentifier oOid = (ASN1ObjectIdentifier)other.ordering.elementAt(j);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                if (oid.equals(oOid))[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    String oValue = (String)other.values.elementAt(j);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                    if (equivalentStrings(value, oValue))[0m
[0m[[0m[33mwarn[0m] [0m[0m                    {[0m
[0m[[0m[33mwarn[0m] [0m[0m                        indexes[j] = true;[0m
[0m[[0m[33mwarn[0m] [0m[0m                        found      = true;[0m
[0m[[0m[33mwarn[0m] [0m[0m                        break;[0m
[0m[[0m[33mwarn[0m] [0m[0m                    }[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (!found)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                return false;[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        [0m
[0m[[0m[33mwarn[0m] [0m[0m        return true;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private boolean equivalentStrings(String s1, String s2)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        String value = canonicalize(s1);[0m
[0m[[0m[33mwarn[0m] [0m[0m        String oValue = canonicalize(s2);[0m
[0m[[0m[33mwarn[0m] [0m[0m        [0m
[0m[[0m[33mwarn[0m] [0m[0m        if (!value.equals(oValue))[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            value = stripInternalSpaces(value);[0m
[0m[[0m[33mwarn[0m] [0m[0m            oValue = stripInternalSpaces(oValue);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (!value.equals(oValue))[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                return false;[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return true;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private String canonicalize(String s)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        String value = Strings.toLowerCase(s.trim());[0m
[0m[[0m[33mwarn[0m] [0m[0m        [0m
[0m[[0m[33mwarn[0m] [0m[0m        if (value.length() > 0 && value.charAt(0) == '#')[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1Primitive obj = decodeObject(value);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (obj instanceof ASN1String)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                value = Strings.toLowerCase(((ASN1String)obj).getString().trim());[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return value;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private ASN1Primitive decodeObject(String oValue)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        try[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return ASN1Primitive.fromByteArray(Hex.decodeStrict(oValue, 1, oValue.length() - 1));[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        catch (IOException e)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new IllegalStateException("unknown encoding in name: " + e);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private String stripInternalSpaces([0m
[0m[[0m[33mwarn[0m] [0m[0m        String str)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        StringBuffer res = new StringBuffer();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (str.length() != 0)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            char    c1 = str.charAt(0);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            res.append(c1);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            for (int k = 1; k < str.length(); k++)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                char    c2 = str.charAt(k);[0m
[0m[[0m[33mwarn[0m] [0m[0m                if (!(c1 == ' ' && c2 == ' '))[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    res.append(c2);[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m                c1 = c2;[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return res.toString();[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private void appendValue([0m
[0m[[0m[33mwarn[0m] [0m[0m        StringBuffer        buf,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Hashtable           oidSymbols,[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1ObjectIdentifier oid,[0m
[0m[[0m[33mwarn[0m] [0m[0m        String              value)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        String  sym = (String)oidSymbols.get(oid);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (sym != null)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            buf.append(sym);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        else[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            buf.append(oid.getId());[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        buf.append('=');[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        int start = buf.length();[0m
[0m[[0m[33mwarn[0m] [0m[0m        buf.append(value);[0m
[0m[[0m[33mwarn[0m] [0m[0m        int end = buf.length();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (value.length() >= 2 && value.charAt(0) == '\\' && value.charAt(1) == '#')[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            start += 2;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (start < end && buf.charAt(start) == ' ')[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            buf.insert(start, "\\");[0m
[0m[[0m[33mwarn[0m] [0m[0m            start += 2;[0m
[0m[[0m[33mwarn[0m] [0m[0m            ++end;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (--end > start && buf.charAt(end) == ' ')[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            buf.insert(end, '\\');[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (start <= end)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            switch (buf.charAt(start))[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m            case ',':[0m
[0m[[0m[33mwarn[0m] [0m[0m            case '"':[0m
[0m[[0m[33mwarn[0m] [0m[0m            case '\\':[0m
[0m[[0m[33mwarn[0m] [0m[0m            case '+':[0m
[0m[[0m[33mwarn[0m] [0m[0m            case '=':[0m
[0m[[0m[33mwarn[0m] [0m[0m            case '<':[0m
[0m[[0m[33mwarn[0m] [0m[0m            case '>':[0m
[0m[[0m[33mwarn[0m] [0m[0m            case ';':[0m
[0m[[0m[33mwarn[0m] [0m[0m                buf.insert(start, "\\");[0m
[0m[[0m[33mwarn[0m] [0m[0m                start += 2;[0m
[0m[[0m[33mwarn[0m] [0m[0m                ++end;[0m
[0m[[0m[33mwarn[0m] [0m[0m                break;[0m
[0m[[0m[33mwarn[0m] [0m[0m            default:[0m
[0m[[0m[33mwarn[0m] [0m[0m                ++start;[0m
[0m[[0m[33mwarn[0m] [0m[0m                break;[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * convert the structure to a string - if reverse is true the[0m
[0m[[0m[33mwarn[0m] [0m[0m     * oids and values are listed out starting with the last element[0m
[0m[[0m[33mwarn[0m] [0m[0m     * in the sequence (ala RFC 2253), otherwise the string will begin[0m
[0m[[0m[33mwarn[0m] [0m[0m     * with the first element of the structure. If no string definition[0m
[0m[[0m[33mwarn[0m] [0m[0m     * for the oid is found in oidSymbols the string value of the oid is[0m
[0m[[0m[33mwarn[0m] [0m[0m     * added. Two standard symbol tables are provided DefaultSymbols, and[0m
[0m[[0m[33mwarn[0m] [0m[0m     * RFC2253Symbols as part of this class.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @param reverse if true start at the end of the sequence and work back.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @param oidSymbols look up table strings for oids.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public String toString([0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean     reverse,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Hashtable   oidSymbols)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        StringBuffer            buf = new StringBuffer();[0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector                  components = new Vector();[0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean                 first = true;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        StringBuffer ava = null;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        for (int i = 0; i < ordering.size(); i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (((Boolean)added.elementAt(i)).booleanValue())[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                ava.append('+');[0m
[0m[[0m[33mwarn[0m] [0m[0m                appendValue(ava, oidSymbols,[0m
[0m[[0m[33mwarn[0m] [0m[0m                    (ASN1ObjectIdentifier)ordering.elementAt(i),[0m
[0m[[0m[33mwarn[0m] [0m[0m                    (String)values.elementAt(i));[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m            else[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                ava = new StringBuffer();[0m
[0m[[0m[33mwarn[0m] [0m[0m                appendValue(ava, oidSymbols,[0m
[0m[[0m[33mwarn[0m] [0m[0m                    (ASN1ObjectIdentifier)ordering.elementAt(i),[0m
[0m[[0m[33mwarn[0m] [0m[0m                    (String)values.elementAt(i));[0m
[0m[[0m[33mwarn[0m] [0m[0m                components.addElement(ava);[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (reverse)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            for (int i = components.size() - 1; i >= 0; i--)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                if (first)[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    first = false;[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m                else[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    buf.append(',');[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                buf.append(components.elementAt(i).toString());[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        else[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            for (int i = 0; i < components.size(); i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                if (first)[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    first = false;[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m                else[0m
[0m[[0m[33mwarn[0m] [0m[0m                {[0m
[0m[[0m[33mwarn[0m] [0m[0m                    buf.append(',');[0m
[0m[[0m[33mwarn[0m] [0m[0m                }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m                buf.append(components.elementAt(i).toString());[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return buf.toString();[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private String bytesToString([0m
[0m[[0m[33mwarn[0m] [0m[0m        byte[] data)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        char[]  cs = new char[data.length];[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        for (int i = 0; i != cs.length; i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            cs[i] = (char)(data[i] & 0xff);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return new String(cs);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    public String toString()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return toString(DefaultReverse, DefaultSymbols);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m}[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\cryptopro\GOST3410ParamSetParameters.java:69:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic int getLKeySize()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return keySize;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\mozilla\PublicKeyAndChallenge.java:63:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic DERIA5String getChallenge()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return null == challenge || challenge instanceof DERIA5String[0m
[0m[[0m[33mwarn[0m] [0m[0m            ?   (DERIA5String)challenge[0m
[0m[[0m[33mwarn[0m] [0m[0m            :   new DERIA5String(challenge.getString(), false);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\ocsp\ResponseData.java:60:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic ResponseData([0m
[0m[[0m[33mwarn[0m] [0m[0m        ResponderID         responderID,[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1GeneralizedTime  producedAt,[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1Sequence        responses,[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509Extensions responseExtensions)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(V1, responderID, ASN1GeneralizedTime.getInstance(producedAt), responses, Extensions.getInstance(responseExtensions));[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:28:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier SubjectDirectoryAttributes = new ASN1ObjectIdentifier("2.5.29.9");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:34:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier SubjectKeyIdentifier = new ASN1ObjectIdentifier("2.5.29.14");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:40:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier KeyUsage = new ASN1ObjectIdentifier("2.5.29.15");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:46:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier PrivateKeyUsagePeriod = new ASN1ObjectIdentifier("2.5.29.16");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:52:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier SubjectAlternativeName = new ASN1ObjectIdentifier("2.5.29.17");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:58:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier IssuerAlternativeName = new ASN1ObjectIdentifier("2.5.29.18");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:64:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier BasicConstraints = new ASN1ObjectIdentifier("2.5.29.19");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:70:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier CRLNumber = new ASN1ObjectIdentifier("2.5.29.20");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:76:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier ReasonCode = new ASN1ObjectIdentifier("2.5.29.21");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:82:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier InstructionCode = new ASN1ObjectIdentifier("2.5.29.23");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:88:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier InvalidityDate = new ASN1ObjectIdentifier("2.5.29.24");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:94:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier DeltaCRLIndicator = new ASN1ObjectIdentifier("2.5.29.27");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:100:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier IssuingDistributionPoint = new ASN1ObjectIdentifier("2.5.29.28");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:106:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier CertificateIssuer = new ASN1ObjectIdentifier("2.5.29.29");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:112:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier NameConstraints = new ASN1ObjectIdentifier("2.5.29.30");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:118:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier CRLDistributionPoints = new ASN1ObjectIdentifier("2.5.29.31");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:124:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier CertificatePolicies = new ASN1ObjectIdentifier("2.5.29.32");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:130:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier PolicyMappings = new ASN1ObjectIdentifier("2.5.29.33");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:136:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier AuthorityKeyIdentifier = new ASN1ObjectIdentifier("2.5.29.35");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:142:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier PolicyConstraints = new ASN1ObjectIdentifier("2.5.29.36");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:148:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier ExtendedKeyUsage = new ASN1ObjectIdentifier("2.5.29.37");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:154:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier FreshestCRL = new ASN1ObjectIdentifier("2.5.29.46");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:160:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier InhibitAnyPolicy = new ASN1ObjectIdentifier("2.5.29.54");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:166:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier AuthorityInfoAccess = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.1");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:172:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier SubjectInfoAccess = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.11");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:178:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier LogoType = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.12");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:184:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier BiometricInfo = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.2");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:190:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier QCStatements = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.3");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:196:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier AuditIdentity = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.4");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:202:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier NoRevAvail = new ASN1ObjectIdentifier("2.5.29.56");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:208:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final ASN1ObjectIdentifier TargetInformation = new ASN1ObjectIdentifier("2.5.29.55");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:296:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic X509Extensions([0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector      ordering,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Hashtable   extensions)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        Enumeration e;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (ordering == null)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            e = extensions.keys();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        else[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            e = ordering.elements();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (e.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.ordering.addElement(ASN1ObjectIdentifier.getInstance(e.nextElement()));[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        e = this.ordering.elements();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (e.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1ObjectIdentifier     oid = ASN1ObjectIdentifier.getInstance(e.nextElement());[0m
[0m[[0m[33mwarn[0m] [0m[0m            X509Extension           ext = (X509Extension)extensions.get(oid);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.extensions.put(oid, ext);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:334:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic X509Extensions([0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector      objectIDs,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector      values)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        Enumeration e = objectIDs.elements();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (e.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.ordering.addElement(e.nextElement()); [0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        int count = 0;[0m
[0m[[0m[33mwarn[0m] [0m[0m        [0m
[0m[[0m[33mwarn[0m] [0m[0m        e = this.ordering.elements();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (e.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1ObjectIdentifier     oid = (ASN1ObjectIdentifier)e.nextElement();[0m
[0m[[0m[33mwarn[0m] [0m[0m            X509Extension           ext = (X509Extension)values.elementAt(count);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.extensions.put(oid, ext);[0m
[0m[[0m[33mwarn[0m] [0m[0m            count++;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extensions.java:21:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic class X509Extensions[0m
[0m[[0m[33mwarn[0m] [0m[0m    extends ASN1Object[0m
[0m[[0m[33mwarn[0m] [0m[0m{[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Subject Directory Attributes[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier SubjectDirectoryAttributes = new ASN1ObjectIdentifier("2.5.29.9");[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Subject Key Identifier[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier SubjectKeyIdentifier = new ASN1ObjectIdentifier("2.5.29.14");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Key Usage[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier KeyUsage = new ASN1ObjectIdentifier("2.5.29.15");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Private Key Usage Period[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier PrivateKeyUsagePeriod = new ASN1ObjectIdentifier("2.5.29.16");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Subject Alternative Name[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier SubjectAlternativeName = new ASN1ObjectIdentifier("2.5.29.17");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Issuer Alternative Name[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier IssuerAlternativeName = new ASN1ObjectIdentifier("2.5.29.18");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Basic Constraints[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier BasicConstraints = new ASN1ObjectIdentifier("2.5.29.19");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * CRL Number[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier CRLNumber = new ASN1ObjectIdentifier("2.5.29.20");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Reason code[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier ReasonCode = new ASN1ObjectIdentifier("2.5.29.21");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Hold Instruction Code[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier InstructionCode = new ASN1ObjectIdentifier("2.5.29.23");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Invalidity Date[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier InvalidityDate = new ASN1ObjectIdentifier("2.5.29.24");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Delta CRL indicator[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier DeltaCRLIndicator = new ASN1ObjectIdentifier("2.5.29.27");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Issuing Distribution Point[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier IssuingDistributionPoint = new ASN1ObjectIdentifier("2.5.29.28");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Certificate Issuer[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier CertificateIssuer = new ASN1ObjectIdentifier("2.5.29.29");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Name Constraints[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier NameConstraints = new ASN1ObjectIdentifier("2.5.29.30");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * CRL Distribution Points[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier CRLDistributionPoints = new ASN1ObjectIdentifier("2.5.29.31");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Certificate Policies[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier CertificatePolicies = new ASN1ObjectIdentifier("2.5.29.32");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Policy Mappings[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier PolicyMappings = new ASN1ObjectIdentifier("2.5.29.33");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Authority Key Identifier[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier AuthorityKeyIdentifier = new ASN1ObjectIdentifier("2.5.29.35");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Policy Constraints[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier PolicyConstraints = new ASN1ObjectIdentifier("2.5.29.36");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Extended Key Usage[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier ExtendedKeyUsage = new ASN1ObjectIdentifier("2.5.29.37");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Freshest CRL[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier FreshestCRL = new ASN1ObjectIdentifier("2.5.29.46");[0m
[0m[[0m[33mwarn[0m] [0m[0m     [0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Inhibit Any Policy[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier InhibitAnyPolicy = new ASN1ObjectIdentifier("2.5.29.54");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Authority Info Access[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier AuthorityInfoAccess = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.1");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Subject Info Access[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier SubjectInfoAccess = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.11");[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Logo Type[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier LogoType = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.12");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * BiometricInfo[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier BiometricInfo = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.2");[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * QCStatements[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier QCStatements = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.3");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Audit identity extension in attribute certificates.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier AuditIdentity = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.4");[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * NoRevAvail extension in attribute certificates.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier NoRevAvail = new ASN1ObjectIdentifier("2.5.29.56");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * TargetInformation extension in attribute certificates.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *  @deprecated use X509Extension value.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier TargetInformation = new ASN1ObjectIdentifier("2.5.29.55");[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    private Hashtable               extensions = new Hashtable();[0m
[0m[[0m[33mwarn[0m] [0m[0m    private Vector                  ordering = new Vector();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static X509Extensions getInstance([0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1TaggedObject obj,[0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean          explicit)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return getInstance(ASN1Sequence.getInstance(obj, explicit));[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static X509Extensions getInstance([0m
[0m[[0m[33mwarn[0m] [0m[0m        Object  obj)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (obj == null || obj instanceof X509Extensions)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return (X509Extensions)obj;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (obj instanceof ASN1Sequence)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return new X509Extensions((ASN1Sequence)obj);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (obj instanceof Extensions)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return new X509Extensions((ASN1Sequence)((Extensions)obj).toASN1Primitive());[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (obj instanceof ASN1TaggedObject)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1TaggedObject taggedObject = ASN1TaggedObject.getInstance(obj, BERTags.CONTEXT_SPECIFIC);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            return getInstance(taggedObject.getBaseObject().toASN1Primitive());[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        throw new IllegalArgumentException("illegal object in getInstance: " + obj.getClass().getName());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Constructor from ASN1Sequence.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * the extensions are a list of constructed sequences, either with (OID, OctetString) or (OID, Boolean, OctetString)[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Extensions([0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1Sequence  seq)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        Enumeration e = seq.getObjects();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (e.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1Sequence            s = ASN1Sequence.getInstance(e.nextElement());[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (s.size() == 3)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                extensions.put(s.getObjectAt(0), new X509Extension(ASN1Boolean.getInstance(s.getObjectAt(1)), ASN1OctetString.getInstance(s.getObjectAt(2))));[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m            else if (s.size() == 2)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                extensions.put(s.getObjectAt(0), new X509Extension(false, ASN1OctetString.getInstance(s.getObjectAt(1))));[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m            else[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                throw new IllegalArgumentException("Bad sequence size: " + s.size());[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            ordering.addElement(s.getObjectAt(0));[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * constructor from a table of extensions.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * <p>[0m
[0m[[0m[33mwarn[0m] [0m[0m     * it's is assumed the table contains OID/String pairs.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Extensions([0m
[0m[[0m[33mwarn[0m] [0m[0m        Hashtable  extensions)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(null, extensions);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Constructor from a table of extensions with ordering.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * <p>[0m
[0m[[0m[33mwarn[0m] [0m[0m     * It's is assumed the table contains OID/String pairs.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use Extensions[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Extensions([0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector      ordering,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Hashtable   extensions)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        Enumeration e;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (ordering == null)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            e = extensions.keys();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        else[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            e = ordering.elements();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (e.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.ordering.addElement(ASN1ObjectIdentifier.getInstance(e.nextElement()));[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        e = this.ordering.elements();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (e.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1ObjectIdentifier     oid = ASN1ObjectIdentifier.getInstance(e.nextElement());[0m
[0m[[0m[33mwarn[0m] [0m[0m            X509Extension           ext = (X509Extension)extensions.get(oid);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.extensions.put(oid, ext);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Constructor from two vectors[0m
[0m[[0m[33mwarn[0m] [0m[0m     * [0m
[0m[[0m[33mwarn[0m] [0m[0m     * @param objectIDs a vector of the object identifiers.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @param values a vector of the extension values.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @deprecated use Extensions[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Extensions([0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector      objectIDs,[0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector      values)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        Enumeration e = objectIDs.elements();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (e.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.ordering.addElement(e.nextElement()); [0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        int count = 0;[0m
[0m[[0m[33mwarn[0m] [0m[0m        [0m
[0m[[0m[33mwarn[0m] [0m[0m        e = this.ordering.elements();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (e.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1ObjectIdentifier     oid = (ASN1ObjectIdentifier)e.nextElement();[0m
[0m[[0m[33mwarn[0m] [0m[0m            X509Extension           ext = (X509Extension)values.elementAt(count);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            this.extensions.put(oid, ext);[0m
[0m[[0m[33mwarn[0m] [0m[0m            count++;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * return an Enumeration of the extension field's object ids.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public Enumeration oids()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return ordering.elements();[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * return the extension represented by the object identifier[0m
[0m[[0m[33mwarn[0m] [0m[0m     * passed in.[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return the extension if it's present, null otherwise.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Extension getExtension([0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1ObjectIdentifier oid)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return (X509Extension)extensions.get(oid);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * <pre>[0m
[0m[[0m[33mwarn[0m] [0m[0m     *     Extensions        ::=   SEQUENCE SIZE (1..MAX) OF Extension[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     *     Extension         ::=   SEQUENCE {[0m
[0m[[0m[33mwarn[0m] [0m[0m     *        extnId            EXTENSION.&amp;id ({ExtensionSet}),[0m
[0m[[0m[33mwarn[0m] [0m[0m     *        critical          BOOLEAN DEFAULT FALSE,[0m
[0m[[0m[33mwarn[0m] [0m[0m     *        extnValue         OCTET STRING }[0m
[0m[[0m[33mwarn[0m] [0m[0m     * </pre>[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive toASN1Primitive()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1EncodableVector vec = new ASN1EncodableVector(ordering.size());[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        Enumeration e = ordering.elements();[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (e.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1EncodableVector v = new ASN1EncodableVector(3);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            ASN1ObjectIdentifier oid = (ASN1ObjectIdentifier)e.nextElement();[0m
[0m[[0m[33mwarn[0m] [0m[0m            X509Extension ext = (X509Extension)extensions.get(oid);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            v.add(oid);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (ext.isCritical())[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                v.add(ASN1Boolean.TRUE);[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            v.add(ext.getValue());[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            vec.add(new DERSequence(v));[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return new DERSequence(vec);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public boolean equivalent([0m
[0m[[0m[33mwarn[0m] [0m[0m        X509Extensions other)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (extensions.size() != other.extensions.size())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return false;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        Enumeration     e1 = extensions.keys();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        while (e1.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            Object  key = e1.nextElement();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (!extensions.get(key).equals(other.extensions.get(key)))[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                return false;[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return true;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1ObjectIdentifier[] getExtensionOIDs()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return toOidArray(ordering);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1ObjectIdentifier[] getNonCriticalExtensionOIDs()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return getExtensionOIDs(false);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1ObjectIdentifier[] getCriticalExtensionOIDs()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return getExtensionOIDs(true);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private ASN1ObjectIdentifier[] getExtensionOIDs(boolean isCritical)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        Vector oidVec = new Vector();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        for (int i = 0; i != ordering.size(); i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            Object oid = ordering.elementAt(i);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m            if (((X509Extension)extensions.get(oid)).isCritical() == isCritical)[0m
[0m[[0m[33mwarn[0m] [0m[0m            {[0m
[0m[[0m[33mwarn[0m] [0m[0m                oidVec.addElement(oid);[0m
[0m[[0m[33mwarn[0m] [0m[0m            }[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return toOidArray(oidVec);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    private ASN1ObjectIdentifier[] toOidArray(Vector oidVec)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1ObjectIdentifier[] oids = new ASN1ObjectIdentifier[oidVec.size()];[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        for (int i = 0; i != oids.length; i++)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            oids[i] = (ASN1ObjectIdentifier)oidVec.elementAt(i);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        return oids;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m}[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\X509Extension.java:15:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic class X509Extension[0m
[0m[[0m[33mwarn[0m] [0m[0m{[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Subject Directory Attributes[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier subjectDirectoryAttributes = new ASN1ObjectIdentifier("2.5.29.9");[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Subject Key Identifier [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier subjectKeyIdentifier = new ASN1ObjectIdentifier("2.5.29.14");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Key Usage [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier keyUsage = new ASN1ObjectIdentifier("2.5.29.15");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Private Key Usage Period [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier privateKeyUsagePeriod = new ASN1ObjectIdentifier("2.5.29.16");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Subject Alternative Name [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier subjectAlternativeName = new ASN1ObjectIdentifier("2.5.29.17");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Issuer Alternative Name [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier issuerAlternativeName = new ASN1ObjectIdentifier("2.5.29.18");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Basic Constraints [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier basicConstraints = new ASN1ObjectIdentifier("2.5.29.19");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * CRL Number [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier cRLNumber = new ASN1ObjectIdentifier("2.5.29.20");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Reason code [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier reasonCode = new ASN1ObjectIdentifier("2.5.29.21");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Hold Instruction Code [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier instructionCode = new ASN1ObjectIdentifier("2.5.29.23");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Invalidity Date [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier invalidityDate = new ASN1ObjectIdentifier("2.5.29.24");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Delta CRL indicator [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier deltaCRLIndicator = new ASN1ObjectIdentifier("2.5.29.27");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Issuing Distribution Point [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier issuingDistributionPoint = new ASN1ObjectIdentifier("2.5.29.28");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Certificate Issuer [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier certificateIssuer = new ASN1ObjectIdentifier("2.5.29.29");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Name Constraints [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier nameConstraints = new ASN1ObjectIdentifier("2.5.29.30");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * CRL Distribution Points [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier cRLDistributionPoints = new ASN1ObjectIdentifier("2.5.29.31");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Certificate Policies [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier certificatePolicies = new ASN1ObjectIdentifier("2.5.29.32");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Policy Mappings [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier policyMappings = new ASN1ObjectIdentifier("2.5.29.33");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Authority Key Identifier [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier authorityKeyIdentifier = new ASN1ObjectIdentifier("2.5.29.35");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Policy Constraints [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier policyConstraints = new ASN1ObjectIdentifier("2.5.29.36");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Extended Key Usage [0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier extendedKeyUsage = new ASN1ObjectIdentifier("2.5.29.37");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Freshest CRL[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier freshestCRL = new ASN1ObjectIdentifier("2.5.29.46");[0m
[0m[[0m[33mwarn[0m] [0m[0m     [0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Inhibit Any Policy[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier inhibitAnyPolicy = new ASN1ObjectIdentifier("2.5.29.54");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Authority Info Access[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier authorityInfoAccess = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.1");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Subject Info Access[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier subjectInfoAccess = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.11");[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Logo Type[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier logoType = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.12");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * BiometricInfo[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier biometricInfo = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.2");[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * QCStatements[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier qCStatements = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.3");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Audit identity extension in attribute certificates.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier auditIdentity = new ASN1ObjectIdentifier("1.3.6.1.5.5.7.1.4");[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * NoRevAvail extension in attribute certificates.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier noRevAvail = new ASN1ObjectIdentifier("2.5.29.56");[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * TargetInformation extension in attribute certificates.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static final ASN1ObjectIdentifier targetInformation = new ASN1ObjectIdentifier("2.5.29.55");[0m
[0m[[0m[33mwarn[0m] [0m[0m        [0m
[0m[[0m[33mwarn[0m] [0m[0m    boolean             critical;[0m
[0m[[0m[33mwarn[0m] [0m[0m    ASN1OctetString     value;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Extension([0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1Boolean             critical,[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1OctetString         value)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.critical = critical.isTrue();[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.value = value;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public X509Extension([0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean                 critical,[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1OctetString         value)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.critical = critical;[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.value = value;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public boolean isCritical()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return critical;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1OctetString getValue()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return value;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Encodable getParsedValue()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return convertValueToObject(this);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public int hashCode()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (this.isCritical())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return this.getValue().hashCode();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return ~this.getValue().hashCode();[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public boolean equals([0m
[0m[[0m[33mwarn[0m] [0m[0m        Object  o)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (!(o instanceof X509Extension))[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return false;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509Extension   other = (X509Extension)o;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        return other.getValue().equals(this.getValue())[0m
[0m[[0m[33mwarn[0m] [0m[0m            && (other.isCritical() == this.isCritical());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * Convert the value of the passed in extension to an object[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @param ext the extension to parse[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @return the object the value string contains[0m
[0m[[0m[33mwarn[0m] [0m[0m     * @exception IllegalArgumentException if conversion is not possible[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static ASN1Primitive convertValueToObject([0m
[0m[[0m[33mwarn[0m] [0m[0m        X509Extension ext)[0m
[0m[[0m[33mwarn[0m] [0m[0m        throws IllegalArgumentException[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        try[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return ASN1Primitive.fromByteArray(ext.getValue().getOctets());[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        catch (IOException e)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new IllegalArgumentException("can't convert extension: " +  e);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m}[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\CRLReason.java:34:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final int UNSPECIFIED = 0;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\CRLReason.java:38:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final int KEY_COMPROMISE = 1;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\CRLReason.java:42:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final int CA_COMPROMISE = 2;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\CRLReason.java:46:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final int AFFILIATION_CHANGED = 3;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\CRLReason.java:50:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final int SUPERSEDED = 4;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\CRLReason.java:54:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final int CESSATION_OF_OPERATION = 5;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\CRLReason.java:58:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final int CERTIFICATE_HOLD = 6;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\CRLReason.java:62:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final int REMOVE_FROM_CRL = 8;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\CRLReason.java:66:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final int PRIVILEGE_WITHDRAWN = 9;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\x509\CRLReason.java:70:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic static final int AA_COMPROMISE = 10;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\ocsp\CrlID.java:69:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic DERIA5String getCrlUrl()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return null == crlUrl || crlUrl instanceof DERIA5String[0m
[0m[[0m[33mwarn[0m] [0m[0m            ?   (DERIA5String)crlUrl[0m
[0m[[0m[33mwarn[0m] [0m[0m            :   new DERIA5String(crlUrl.getString(), false);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\ocsp\TBSRequest.java:33:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic TBSRequest([0m
[0m[[0m[33mwarn[0m] [0m[0m        GeneralName     requestorName,[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1Sequence    requestList,[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509Extensions requestExtensions)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.version = V1;[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.requestorName = requestorName;[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.requestList = requestList;[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.requestExtensions = Extensions.getInstance(requestExtensions);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\ocsp\SingleResponse.java:31:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic SingleResponse([0m
[0m[[0m[33mwarn[0m] [0m[0m        CertID              certID,[0m
[0m[[0m[33mwarn[0m] [0m[0m        CertStatus          certStatus,[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1GeneralizedTime thisUpdate,[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1GeneralizedTime nextUpdate,[0m
[0m[[0m[33mwarn[0m] [0m[0m        X509Extensions singleExtensions)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(certID, certStatus, thisUpdate, nextUpdate, Extensions.getInstance(singleExtensions));[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\pkcs\PKCSObjectIdentifiers.java:200:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mASN1ObjectIdentifier    x509certType            = pkcs_9.branch("22.1");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\pkcs\PKCSObjectIdentifiers.java:418:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mASN1ObjectIdentifier id_aa_sigPolicyId    = id_aa_ets_sigPolicyId;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\pkcs\PKCSObjectIdentifiers.java:420:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mASN1ObjectIdentifier id_aa_commitmentType = id_aa_ets_commitmentType;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\pkcs\PKCSObjectIdentifiers.java:422:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mASN1ObjectIdentifier id_aa_signerLocation = id_aa_ets_signerLocation;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\pkcs\PKCSObjectIdentifiers.java:424:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mASN1ObjectIdentifier id_aa_otherSigCert   = id_aa_ets_otherSigCert;[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\pkcs\PKCSObjectIdentifiers.java:480:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mASN1ObjectIdentifier    pbewithSHAAnd40BitRC2_CBC = pkcs_12PbeIds.branch("6");[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\pkcs\CertificationRequest.java:61:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic CertificationRequest([0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1Sequence seq)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        reqInfo = CertificationRequestInfo.getInstance(seq.getObjectAt(0));[0m
[0m[[0m[33mwarn[0m] [0m[0m        sigAlgId = AlgorithmIdentifier.getInstance(seq.getObjectAt(1));[0m
[0m[[0m[33mwarn[0m] [0m[0m        sigBits = (DERBitString)seq.getObjectAt(2);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\pkcs\CertificationRequestInfo.java:92:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic CertificationRequestInfo([0m
[0m[[0m[33mwarn[0m] [0m[0m        X509Name                subject,[0m
[0m[[0m[33mwarn[0m] [0m[0m        SubjectPublicKeyInfo    pkInfo,[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1Set                 attributes)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(X500Name.getInstance(subject.toASN1Primitive()), pkInfo, attributes);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\pkcs\RSAPrivateKeyStructure.java:17:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic class RSAPrivateKeyStructure[0m
[0m[[0m[33mwarn[0m] [0m[0m    extends ASN1Object[0m
[0m[[0m[33mwarn[0m] [0m[0m{[0m
[0m[[0m[33mwarn[0m] [0m[0m    private int         version;[0m
[0m[[0m[33mwarn[0m] [0m[0m    private BigInteger  modulus;[0m
[0m[[0m[33mwarn[0m] [0m[0m    private BigInteger  publicExponent;[0m
[0m[[0m[33mwarn[0m] [0m[0m    private BigInteger  privateExponent;[0m
[0m[[0m[33mwarn[0m] [0m[0m    private BigInteger  prime1;[0m
[0m[[0m[33mwarn[0m] [0m[0m    private BigInteger  prime2;[0m
[0m[[0m[33mwarn[0m] [0m[0m    private BigInteger  exponent1;[0m
[0m[[0m[33mwarn[0m] [0m[0m    private BigInteger  exponent2;[0m
[0m[[0m[33mwarn[0m] [0m[0m    private BigInteger  coefficient;[0m
[0m[[0m[33mwarn[0m] [0m[0m    private ASN1Sequence otherPrimeInfos = null;[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static RSAPrivateKeyStructure getInstance([0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1TaggedObject obj,[0m
[0m[[0m[33mwarn[0m] [0m[0m        boolean          explicit)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return getInstance(ASN1Sequence.getInstance(obj, explicit));[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public static RSAPrivateKeyStructure getInstance([0m
[0m[[0m[33mwarn[0m] [0m[0m        Object  obj)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (obj instanceof RSAPrivateKeyStructure)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return (RSAPrivateKeyStructure)obj;[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        else if (obj instanceof ASN1Sequence)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            return new RSAPrivateKeyStructure((ASN1Sequence)obj);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        throw new IllegalArgumentException("unknown object in factory: " + obj.getClass().getName());[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    public RSAPrivateKeyStructure([0m
[0m[[0m[33mwarn[0m] [0m[0m        BigInteger  modulus,[0m
[0m[[0m[33mwarn[0m] [0m[0m        BigInteger  publicExponent,[0m
[0m[[0m[33mwarn[0m] [0m[0m        BigInteger  privateExponent,[0m
[0m[[0m[33mwarn[0m] [0m[0m        BigInteger  prime1,[0m
[0m[[0m[33mwarn[0m] [0m[0m        BigInteger  prime2,[0m
[0m[[0m[33mwarn[0m] [0m[0m        BigInteger  exponent1,[0m
[0m[[0m[33mwarn[0m] [0m[0m        BigInteger  exponent2,[0m
[0m[[0m[33mwarn[0m] [0m[0m        BigInteger  coefficient)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.version = 0;[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.modulus = modulus;[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.publicExponent = publicExponent;[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.privateExponent = privateExponent;[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.prime1 = prime1;[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.prime2 = prime2;[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.exponent1 = exponent1;[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.exponent2 = exponent2;[0m
[0m[[0m[33mwarn[0m] [0m[0m        this.coefficient = coefficient;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public RSAPrivateKeyStructure([0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1Sequence  seq)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        Enumeration e = seq.getObjects();[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1Integer v = (ASN1Integer)e.nextElement();[0m
[0m[[0m[33mwarn[0m] [0m[0m        int versionValue = v.intValueExact();[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (versionValue < 0 || versionValue > 1)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            throw new IllegalArgumentException("wrong version for RSA private key");[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        version = versionValue;[0m
[0m[[0m[33mwarn[0m] [0m[0m        modulus = ((ASN1Integer)e.nextElement()).getValue();[0m
[0m[[0m[33mwarn[0m] [0m[0m        publicExponent = ((ASN1Integer)e.nextElement()).getValue();[0m
[0m[[0m[33mwarn[0m] [0m[0m        privateExponent = ((ASN1Integer)e.nextElement()).getValue();[0m
[0m[[0m[33mwarn[0m] [0m[0m        prime1 = ((ASN1Integer)e.nextElement()).getValue();[0m
[0m[[0m[33mwarn[0m] [0m[0m        prime2 = ((ASN1Integer)e.nextElement()).getValue();[0m
[0m[[0m[33mwarn[0m] [0m[0m        exponent1 = ((ASN1Integer)e.nextElement()).getValue();[0m
[0m[[0m[33mwarn[0m] [0m[0m        exponent2 = ((ASN1Integer)e.nextElement()).getValue();[0m
[0m[[0m[33mwarn[0m] [0m[0m        coefficient = ((ASN1Integer)e.nextElement()).getValue();[0m
[0m[[0m[33mwarn[0m] [0m[0m        [0m
[0m[[0m[33mwarn[0m] [0m[0m        if (e.hasMoreElements())[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            otherPrimeInfos = (ASN1Sequence)e.nextElement();[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public int getVersion()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return version;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m    [0m
[0m[[0m[33mwarn[0m] [0m[0m    public BigInteger getModulus()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return modulus;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public BigInteger getPublicExponent()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return publicExponent;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public BigInteger getPrivateExponent()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return privateExponent;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public BigInteger getPrime1()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return prime1;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public BigInteger getPrime2()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return prime2;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public BigInteger getExponent1()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return exponent1;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public BigInteger getExponent2()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return exponent2;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    public BigInteger getCoefficient()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        return coefficient;[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m    /**[0m
[0m[[0m[33mwarn[0m] [0m[0m     * This outputs the key in PKCS1v2 format.[0m
[0m[[0m[33mwarn[0m] [0m[0m     * <pre>[0m
[0m[[0m[33mwarn[0m] [0m[0m     *      RSAPrivateKey ::= SEQUENCE {[0m
[0m[[0m[33mwarn[0m] [0m[0m     *                          version Version,[0m
[0m[[0m[33mwarn[0m] [0m[0m     *                          modulus INTEGER, -- n[0m
[0m[[0m[33mwarn[0m] [0m[0m     *                          publicExponent INTEGER, -- e[0m
[0m[[0m[33mwarn[0m] [0m[0m     *                          privateExponent INTEGER, -- d[0m
[0m[[0m[33mwarn[0m] [0m[0m     *                          prime1 INTEGER, -- p[0m
[0m[[0m[33mwarn[0m] [0m[0m     *                          prime2 INTEGER, -- q[0m
[0m[[0m[33mwarn[0m] [0m[0m     *                          exponent1 INTEGER, -- d mod (p-1)[0m
[0m[[0m[33mwarn[0m] [0m[0m     *                          exponent2 INTEGER, -- d mod (q-1)[0m
[0m[[0m[33mwarn[0m] [0m[0m     *                          coefficient INTEGER, -- (inverse of q) mod p[0m
[0m[[0m[33mwarn[0m] [0m[0m     *                          otherPrimeInfos OtherPrimeInfos OPTIONAL[0m
[0m[[0m[33mwarn[0m] [0m[0m     *                      }[0m
[0m[[0m[33mwarn[0m] [0m[0m     *[0m
[0m[[0m[33mwarn[0m] [0m[0m     *      Version ::= INTEGER { two-prime(0), multi(1) }[0m
[0m[[0m[33mwarn[0m] [0m[0m     *        (CONSTRAINED BY {-- version must be multi if otherPrimeInfos present --})[0m
[0m[[0m[33mwarn[0m] [0m[0m     * </pre>[0m
[0m[[0m[33mwarn[0m] [0m[0m     * <p>[0m
[0m[[0m[33mwarn[0m] [0m[0m     * This routine is written to output PKCS1 version 2.1, private keys.[0m
[0m[[0m[33mwarn[0m] [0m[0m     */[0m
[0m[[0m[33mwarn[0m] [0m[0m    public ASN1Primitive toASN1Primitive()[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1EncodableVector  v = new ASN1EncodableVector(10);[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        v.add(new ASN1Integer(version));                       // version[0m
[0m[[0m[33mwarn[0m] [0m[0m        v.add(new ASN1Integer(getModulus()));[0m
[0m[[0m[33mwarn[0m] [0m[0m        v.add(new ASN1Integer(getPublicExponent()));[0m
[0m[[0m[33mwarn[0m] [0m[0m        v.add(new ASN1Integer(getPrivateExponent()));[0m
[0m[[0m[33mwarn[0m] [0m[0m        v.add(new ASN1Integer(getPrime1()));[0m
[0m[[0m[33mwarn[0m] [0m[0m        v.add(new ASN1Integer(getPrime2()));[0m
[0m[[0m[33mwarn[0m] [0m[0m        v.add(new ASN1Integer(getExponent1()));[0m
[0m[[0m[33mwarn[0m] [0m[0m        v.add(new ASN1Integer(getExponent2()));[0m
[0m[[0m[33mwarn[0m] [0m[0m        v.add(new ASN1Integer(getCoefficient()));[0m
[0m[[0m[33mwarn[0m] [0m[0m[0m
[0m[[0m[33mwarn[0m] [0m[0m        if (otherPrimeInfos != null)[0m
[0m[[0m[33mwarn[0m] [0m[0m        {[0m
[0m[[0m[33mwarn[0m] [0m[0m            v.add(otherPrimeInfos);[0m
[0m[[0m[33mwarn[0m] [0m[0m        }[0m
[0m[[0m[33mwarn[0m] [0m[0m        [0m
[0m[[0m[33mwarn[0m] [0m[0m        return new DERSequence(v);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0m}[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\sec\ECPrivateKey.java:54:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic ECPrivateKey([0m
[0m[[0m[33mwarn[0m] [0m[0m        BigInteger key)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(key.bitLength(), key);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[33mwarn[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\sec\ECPrivateKey.java:83:1: Êé®Â•®„Åï„Çå„Å™„ÅÑÈ†ÖÁõÆ„ÅØ@Deprecated„ÅßÊ≥®Èáà„Åå‰ªò„Åë„Çâ„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì[0m
[0m[[0m[33mwarn[0m] [0m[0mpublic ECPrivateKey([0m
[0m[[0m[33mwarn[0m] [0m[0m        BigInteger key,[0m
[0m[[0m[33mwarn[0m] [0m[0m        ASN1Encodable parameters)[0m
[0m[[0m[33mwarn[0m] [0m[0m    {[0m
[0m[[0m[33mwarn[0m] [0m[0m        this(key, null, parameters);[0m
[0m[[0m[33mwarn[0m] [0m[0m    }[0m
[0m[[0m[0minfo[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\ASN1InputStream.java: ‰∏ÄÈÉ®„ÅÆÂÖ•Âäõ„Éï„Ç°„Ç§„É´„ÅØÊé®Â•®„Åï„Çå„Å™„ÅÑAPI„Çí‰ΩøÁî®„Åæ„Åü„ÅØ„Ç™„Éº„Éê„Éº„É©„Ç§„Éâ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ[0m
[0m[[0m[0minfo[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\ASN1InputStream.java: Ë©≥Á¥∞„ÅØ„ÄÅ-Xlint:deprecation„Ç™„Éó„Ç∑„Éß„É≥„ÇíÊåáÂÆö„Åó„Å¶ÂÜç„Ç≥„É≥„Éë„Ç§„É´„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ[0m
[0m[[0m[0minfo[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\LocaleUtil.java: ÂÖ•Âäõ„Éï„Ç°„Ç§„É´„ÅÆÊìç‰Ωú„ÅÆ„ÅÜ„Å°„ÄÅÊú™„ÉÅ„Çß„ÉÉ„ÇØ„Åæ„Åü„ÅØÂÆâÂÖ®„Åß„ÅØ„Å™„ÅÑ„ÇÇ„ÅÆ„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ[0m
[0m[[0m[0minfo[0m] [0m[0mC:\Users\hamano\Documents\college\zemi\github\bc-java-main\core\src\main\java\org\bouncycastle\asn1\LocaleUtil.java: Ë©≥Á¥∞„ÅØ„ÄÅ-Xlint:unchecked„Ç™„Éó„Ç∑„Éß„É≥„ÇíÊåáÂÆö„Åó„Å¶ÂÜç„Ç≥„É≥„Éë„Ç§„É´„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ[0m
